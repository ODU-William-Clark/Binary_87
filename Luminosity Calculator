import numpy as np
from astropy.coordinates import SkyCoord
from astropy import units as u

# Constants for LG apex motion from Schweizer (Yahil et al. 1977)
V_SUN = 308.0  # km/s
L_SUN = np.radians(105.0)
B_SUN = np.radians(-7.0)

def b1950_to_galactic(ra_str, dec_str):
    """
    Convert B1950 equatorial coordinates (sexagesimal) to galactic (l, b).
    """
    coord_b1950 = SkyCoord(ra=ra_str, dec=dec_str, frame='fk4', equinox='B1950')
    gal_coord = coord_b1950.galactic
    return gal_coord.l.deg, gal_coord.b.deg

def correct_to_local_group(v_helio, l_deg, b_deg):
    """
    Correct heliocentric radial velocity to Local Group standard of rest.
    """
    l_rad = np.radians(l_deg)
    b_rad = np.radians(b_deg)

    # cos_theta = (
    #     np.sin(b_rad) * np.sin(B_SUN) +
    #     np.cos(b_rad) * np.cos(B_SUN) * np.cos(l_rad - L_SUN)
    # )

    # v_lg = v_helio - V_SUN * cos_theta
    
    v_lg = v_helio + V_SUN * (np.sin(b_rad)*np.sin(B_SUN) + np.cos(b_rad)*np.cos(B_SUN)*np.cos(l_rad - L_SUN))
    
    
    return v_lg
    
    

def compute_luminosity(v_lg_a, v_lg_b, m_a, m_b):
    """
    Compute luminosities using Schweizer's method.
    """
    L_app_a = 10**(-0.4 * m_a)
    L_app_b = 10**(-0.4 * m_b)

    v_bar = (v_lg_a * L_app_a + v_lg_b * L_app_b) / (L_app_a + L_app_b)

    L_v_a = 3.42e8 * v_bar**2 * L_app_a
    L_v_b = 3.42e8 * v_bar**2 * L_app_b

    return v_bar, L_v_a, L_v_b

def analyze_pair(ra_a, dec_a, ra_b, dec_b, v_a, v_b, m_a, m_b, theta):
    """
    Full analysis pipeline: coordinate conversion, LG velocity correction,
    luminosity calculation, and mean LG velocity test (no weighting).
    """
    # Step 1: Convert coordinates
    l_a, b_a = b1950_to_galactic(ra_a, dec_a)
    l_b, b_b = b1950_to_galactic(ra_b, dec_b)

    # Step 2: Correct to Local Group Standard of Rest
    v_lg_a = correct_to_local_group(v_a, l_a, b_a)
    v_lg_b = correct_to_local_group(v_b, l_b, b_b)

    # Step 3: Compute luminosities
    v_bar_weighted, L_v_a, L_v_b = compute_luminosity(v_lg_a, v_lg_b, m_a, m_b)

   
    v_p = np.abs( v_lg_a- v_lg_b)/(1+v_bar_weighted/299792.458)
    
    #step 5: compute projected radius
    r_p=40*v_bar_weighted*(np.tan(theta*np.pi/360/60))

    # Print results
    print(f"Galaxy A (l, b): ({l_a:.2f}째, {b_a:.2f}째), v_LG: {v_lg_a:.2f} km/s")
    print(f"Galaxy B (l, b): ({l_b:.2f}째, {b_b:.2f}째), v_LG: {v_lg_b:.2f} km/s")
    print(f"Luminosity-weighted mean velocity: {v_bar_weighted:.2f} km/s")
    print(f"Luminosity A: {L_v_a:.4e} L_sun")
    print(f"Luminosity B: {L_v_b:.4e} L_sun")
    print(f"rp: {r_p:.4e} r_p")
    print(f"v_p:{v_p:.4e} v_p")

    return {
        "l_a": l_a, "b_a": b_a, "v_lg_a": v_lg_a, "L_v_a": L_v_a,
        "l_b": l_b, "b_b": b_b, "v_lg_b": v_lg_b, "L_v_b": L_v_b,
        "v_bar_weighted": v_bar_weighted,
        "r_p":r_p,
        "v_p":v_p
    }


# -------------------
# EXAMPLE USAGE GAL 1
# -------------------
# result = analyze_pair(
#     ra_a="00h00m48s", dec_a="-11d02m50s",
#     ra_b="00h00m58s", dec_b="-11d01m17s",
#     v_a=8982.0,
#     v_b=8923.0,
#     m_a=14.04,
#     m_b=13.60,
#     theta = 2.88
# )

# -------------------
# EXAMPLE USAGE GAL 2
# -------------------
result = analyze_pair(
    ra_a="00h03m47s", dec_a="-41d46m26s",
    ra_b="00h03m53s", dec_b="-41d47m05s",
    v_a=1562.0,
    v_b=1428.0,
    m_a=11.62,
    m_b=14.73,
    theta = 1.25
)
